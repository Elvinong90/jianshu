@import "./theme";

// Reset form input border radius
@mixin form-border-radius($elem, $nth, $dir) {
  #{$elem}:nth-child(#{$nth}) {
    input {
      @if $dir == top {
        border-radius: $btn-default-border-radius $btn-default-border-radius 0 0;
      } @else if $dir == bottom {
        border-radius: 0 0 $btn-default-border-radius $btn-default-border-radius;
      }
    }
  }
}

// Position
// @param position, $top, $left, $right, $bottom - Position
// ----------------------------------
@mixin position($position, $top: null, $left: null, $right: null, $bottom: null) {
  $list: (top: $top, left: $left, right: $right, bottom: $bottom);

  position: $position;

  @each $k, $v in $list {
    @if $v != null {
      #{$k}:$v;
    }
  }
}


// Center horizontal
// @param $args - default null
// Usage: center-horizontal, center-horizontal(flex)
// ----------------------------------
@mixin center-horizontal($args: null) {
  @if $args == null {
    @extend %center-horizontal;
  } @else if $args == flex {
    @extend %flex-center-horizontal;
  }
}

// Image package
// Usage: image-package
// ----------------------------------
@mixin image-package {
  width: 70rem;
  margin-left: -4rem;
  text-align: center;

  .image-package__alt {
    max-width: 100%;
    vertical-align: middle;
    cursor: zoom-in;
  }

  .image-package__alt {
    display: inline-block;
    min-width: 20%;
    max-width: 80%;
    border-bottom: .1rem solid #d9d9d9;
    color: $light;
  }
}

// Display
// @param $arg - display
// Usage: display(flex)
// ----------------------------------
@mixin display($arg) {
  display: $arg;
}

// Justify-content
// @param $arg - flex position
// Usage: justify-content(space-between)
// ----------------------------------
@mixin justify-content($arg) {
  @include display(flex);
  justify-content: $arg;
}

// Flex box
// @param $arg - display
// Usage: display(flex)
// ----------------------------------
@mixin flex-box($flex: flex, $justify-content: null, $align-items: null, $direction: null, $wrap: null, $flow: null, $align-content: null) {
  display: $flex;
  justify-content: $justify-content;
  align-items: $align-items;
  flex-direction: $direction;
  flex-wrap: $wrap;
  flex-flow: $flow;
  align-content: $align-content;
}

// Spacing
// @param $args - args list
// Usage: spacing(ptl, mtl)
// ----------------------------------
@mixin spacing($args...) {
  @each $space in $args {
    @extend %#{$space};
  }
}

// Grid
// @param $args - args list
// Usage: grid(col-sm-7, col-sm-offset-1)
// ----------------------------------
@mixin grid($args...) {
  @each $col in $args {
    @extend %#{$col};
  }
}

// Border
// @param $props - $props list
// @param $args - args list
// @param $rad - border radius
// Usage: border(top left right, .1rem solid #e1e1e1, $rad: 4rem)
// Usage: border(all, .1rem solid #e1e1e1)
// ----------------------------------
@mixin border($props, $args, $rad: null) {
  @if $props == all {
    border: $args;
  } @else {
    @each $prop in $props {
      border-#{$prop}: $args;
    }
  }
  @if $rad != null {
    border-radius: $rad;
  }
}

// Inline-alignment
// @param $arg - text(text-align)
// @param $vertical - vertical(vertical-align)
// Usage: inline-alignment($text: center)
// Usage: inline-alignment($vertical: middle)
// ----------------------------------
@mixin inline-alignment($text: null, $vertical: null) {
  // text-align
  @if $text != null {
    text-align: $text;
  }
  // vertical-align
  @if $vertical != null {
    vertical-align: $vertical;
  }
}

// Button
// @param $size - button size
// @param $variant - button variant
// Usage:
// btn(
//   $size: (0, 2.5rem, 1.6rem, 3.8rem, .4rem),
//   $variant: (#fff, $primary, $primary));
// ----------------------------------
@mixin btn($size: null, $variant: null) {
  @extend %btn-base;
  @if $size != null {
    @include btn-size($size...);
  }
  @if $variant != null {
    @include btn-variant($variant...);
  }

  cursor: pointer;
}

// Button sizes
// Usage: btn-size(0, 2.5rem, 1.6rem, 3.8rem, .4rem)
// ----------------------------------
@mixin btn-size($padding-vertical, $padding-horizontal, $font-size, $line-height, $border-radius) {
  padding: $padding-vertical $padding-horizontal;
  font-size: $font-size;
  line-height: $line-height;
  border-radius: $border-radius;
}

// Button variants
// Usage: btn-variant(#fff, $primary, $primary)
// ----------------------------------
@mixin btn-variant($color, $background, $border) {
  color: $color;
  background-color: $background;
  border-color: $border;
}

// Border radius
// Usage: border-radius(2rem)
// ----------------------------------
@mixin border-radius($radius) {
  border-radius: $radius;
}
